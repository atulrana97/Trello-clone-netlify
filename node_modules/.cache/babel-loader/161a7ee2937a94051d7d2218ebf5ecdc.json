{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/task1-ToDoList/ToDoClass.js\";\nimport React, { Component } from 'react';\nimport './ToDo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToDoClass extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toDoArray: [],\n      currentItem: {\n        key: '',\n        value: ''\n      }\n    };\n    this.addItems = this.addItems.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  addItems(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.value !== '') {\n      const items = [...this.state.toDoArray, newItem];\n      this.setState({\n        toDoArray: items,\n        currentItem: {\n          key: '',\n          value: ''\n        }\n      });\n      document.getElementById('toDoContainer').style.border = 'solid 0.3rem black';\n      document.getElementById('toDoContainer').style.boxShadow = '0.125rem 0.125rem rgb(212, 96, 96)';\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        key: Date.now(),\n        value: e.target.value\n      }\n    });\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.toDoArray.filter(item => item.key !== key);\n    this.setState({\n      toDoArray: filteredItems\n    });\n\n    if (this.state.toDoArray.length === 1) {\n      document.getElementById('toDoContainer').style.border = 'solid 0rem black';\n      document.getElementById('toDoContainer').style.boxShadow = '0rem 0rem rgb(212, 96, 96)';\n    }\n  }\n\n  setUpdate(text, key) {\n    console.log('items:' + this.state.toDoArray);\n    const items = this.state.toDoArray;\n    items.map(item => {\n      item.value = item.key === key ? text : item.value;\n      return item;\n    });\n    this.setState({\n      toDoArray: items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"heading\",\n        \"data-testid\": \"toDoTitle\",\n        children: [\"To Do (\", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"toDoCount\",\n          children: this.state.toDoArray.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addItems,\n        \"data-testid\": \"formTestId\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toDoInput\",\n          type: \"text\",\n          onChange: this.handleInput,\n          \"data-testid\": \"inputTextField\",\n          value: this.state.currentItem.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"submitBtn\",\n          type: \"submit\",\n          value: \"Add Item\",\n          name: \"AddItem\",\n          className: \"submitBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toDoContainer\",\n        id: \"toDoContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-list\",\n          children: this.state.toDoArray.map(ele => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"items\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                \"data-testid\": \"addedItem\",\n                type: \"text\",\n                id: ele.key,\n                value: ele.value,\n                onChange: e => {\n                  this.setUpdate(e.target.value, ele.key);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-testid\": \"deleteBtn\",\n              type: \"button\",\n              className: \"deleteButton\",\n              onClick: () => {\n                this.deleteItem(ele.key);\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, ele.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ToDoClass;","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/task1-ToDoList/ToDoClass.js"],"names":["React","Component","ToDoClass","constructor","state","toDoArray","currentItem","key","value","addItems","bind","handleInput","deleteItem","setUpdate","e","preventDefault","newItem","items","setState","document","getElementById","style","border","boxShadow","Date","now","target","filteredItems","filter","item","length","text","console","log","map","render","ele"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ToDo.css'\n\nclass ToDoClass extends Component {\n  constructor() {\n    super()\n    this.state = {\n      toDoArray: [],\n      currentItem: {\n        key: '',\n        value: ''\n      }\n    }\n    this.addItems = this.addItems.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.setUpdate = this.setUpdate.bind(this)\n  }\n\n  addItems(e) {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    if (newItem.value !== '') {\n      const items = [...this.state.toDoArray, newItem]\n      this.setState({\n        toDoArray: items,\n        currentItem: {\n          key: '',\n          value: ''\n        }\n      })\n      document.getElementById('toDoContainer').style.border =\n        'solid 0.3rem black'\n      document.getElementById('toDoContainer').style.boxShadow =\n        '0.125rem 0.125rem rgb(212, 96, 96)'\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        key: Date.now(),\n        value: e.target.value\n      }\n    })\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.toDoArray.filter(\n      (item) => item.key !== key\n    )\n    this.setState({\n      toDoArray: filteredItems\n    })\n    if (this.state.toDoArray.length === 1) {\n      document.getElementById('toDoContainer').style.border = 'solid 0rem black'\n      document.getElementById('toDoContainer').style.boxShadow =\n        '0rem 0rem rgb(212, 96, 96)'\n    }\n  }\n\n  setUpdate(text, key) {\n    console.log('items:' + this.state.toDoArray)\n    const items = this.state.toDoArray\n    items.map((item) => {\n      item.value = item.key === key ? text : item.value\n      return item\n    })\n    this.setState({\n      toDoArray: items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"finalContainer\">\n        <h1 id=\"heading\" data-testid=\"toDoTitle\">\n          To Do (\n          <span data-testid=\"toDoCount\">{this.state.toDoArray.length}</span>)\n        </h1>\n        <form onSubmit={this.addItems} data-testid=\"formTestId\">\n          <input\n            className=\"toDoInput\"\n            type=\"text\"\n            onChange={this.handleInput}\n            data-testid=\"inputTextField\"\n            value={this.state.currentItem.value}\n          ></input>\n          <input\n            data-testid=\"submitBtn\"\n            type=\"submit\"\n            value=\"Add Item\"\n            name=\"AddItem\"\n            className=\"submitBtn\"\n          />\n        </form>\n        <div className=\"toDoContainer\" id=\"toDoContainer\">\n          <ul className=\"items-list\">\n            {this.state.toDoArray.map((ele) => (\n              <li className=\"items\" key={ele.key}>\n                <p>\n                  <input\n                    data-testid=\"addedItem\"\n                    type=\"text\"\n                    id={ele.key}\n                    value={ele.value}\n                    onChange={(e) => {\n                      this.setUpdate(e.target.value, ele.key)\n                    }}\n                  ></input>\n                </p>\n                <button\n                  data-testid=\"deleteBtn\"\n                  type=\"button\"\n                  className=\"deleteButton\"\n                  onClick={() => {\n                    this.deleteItem(ele.key)\n                  }}\n                >\n                  Remove\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\nexport default ToDoClass\n"]},"metadata":{},"sourceType":"module"}