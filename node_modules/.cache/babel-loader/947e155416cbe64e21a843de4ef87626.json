{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/dashBoardCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { MdModeEdit, MdDelete } from 'react-icons/md';\nimport axios from 'axios';\nimport config from '../config/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction dashBoardCard({\n  card,\n  getCardsForList\n}) {\n  _s();\n\n  const updateForm = useRef(null);\n\n  const deleteCard = async cardId => {\n    try {\n      await axios.delete(`https://api.trello.com/1/cards/${cardId}?key=${config.key}&token=${config.token}`);\n      const getCards = await axios.get(`https://api.trello.com/1/boards/${finalId}/cards?key=${config.key}&token=${config.token}`);\n      getCardsForList(getCards.data);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"update-card-form\",\n          ref: updateForm,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-icons\",\n        children: [/*#__PURE__*/_jsxDEV(MdModeEdit, {\n          element: card,\n          onClick: e => {\n            if (updateForm.style.display === 'block') {\n              updateForm.style.display = 'none';\n            } else {\n              updateForm.style.display = 'block';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdDelete, {\n          onClick: () => deleteCard(card.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(dashBoardCard, \"sllGbcVsxFUWBCEeuVSJu/jiYdE=\");\n\nexport default dashBoardCard;","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/dashBoardCard.js"],"names":["React","useRef","MdModeEdit","MdDelete","axios","config","dashBoardCard","card","getCardsForList","updateForm","deleteCard","cardId","delete","key","token","getCards","get","finalId","data","e","console","error","name","id","style","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,EAAkD;AAAA;;AAChD,QAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;;AACA,QAAMS,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACF,YAAMP,KAAK,CAACQ,MAAN,CACH,kCAAiCD,MAAO,QAAON,MAAM,CAACQ,GAAI,UAASR,MAAM,CAACS,KAAM,EAD7E,CAAN;AAGA,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CACpB,mCAAkCC,OAAQ,cAAaZ,MAAM,CAACQ,GAAI,UAASR,MAAM,CAACS,KAAM,EADpE,CAAvB;AAGAN,MAAAA,eAAe,CAACO,QAAQ,CAACG,IAAV,CAAf;AACD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAZD;;AAcA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAoB,UAAA,SAAS,EAAC,kBAA9B;AAAiD,UAAA,GAAG,EAAEV,UAAtD;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEF,IAAI,CAACe;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF,WAAWf,IAAI,CAACgB,EAAhB;AAAA;AAAA;AAAA;AAAA;AADF,SAAkChB,IAAI,CAACgB,EAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAEhB,IADX;AAEE,UAAA,OAAO,EAAGY,CAAD,IAAO;AACd,gBAAIV,UAAU,CAACe,KAAX,CAAiBC,OAAjB,KAA6B,OAAjC,EAA0C;AACxChB,cAAAA,UAAU,CAACe,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACD,aAFD,MAEO;AACLhB,cAAAA,UAAU,CAACe,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACD;AACF;AARH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,MAAMf,UAAU,CAACH,IAAI,CAACgB,EAAN;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAA4BhB,IAAI,CAACgB,EAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAxCQjB,a;;AA0CT,eAAeA,aAAf","sourcesContent":["import React, { useRef } from 'react'\nimport { MdModeEdit, MdDelete } from 'react-icons/md'\nimport axios from 'axios'\nimport config from '../config/config'\n\nfunction dashBoardCard({ card, getCardsForList }) {\n  const updateForm = useRef(null)\n  const deleteCard = async (cardId) => {\n    try {\n      await axios.delete(\n        `https://api.trello.com/1/cards/${cardId}?key=${config.key}&token=${config.token}`\n      )\n      const getCards = await axios.get(\n        `https://api.trello.com/1/boards/${finalId}/cards?key=${config.key}&token=${config.token}`\n      )\n      getCardsForList(getCards.data)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"cards\" key={card.id}>\n        <div className=\"update-card\" key={card.id}>\n          <form key={card.id} className=\"update-card-form\" ref={updateForm}>\n            <input type=\"text\" value={card.name}></input>\n          </form>\n        </div>\n        <div className=\"card-icons\">\n          <MdModeEdit\n            element={card}\n            onClick={(e) => {\n              if (updateForm.style.display === 'block') {\n                updateForm.style.display = 'none'\n              } else {\n                updateForm.style.display = 'block'\n              }\n            }}\n          />\n          <MdDelete onClick={() => deleteCard(card.id)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default dashBoardCard\n"]},"metadata":{},"sourceType":"module"}