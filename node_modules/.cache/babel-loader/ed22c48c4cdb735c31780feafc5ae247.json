{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../task2.css';\nimport { AiFillDelete } from 'react-icons/ai'; // import { GrUpdate } from 'react-icons/gr'\n\nimport axios from 'axios';\nimport config from '../config/config';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  value,\n  setHomePageData\n}) {\n  const deleteBoardCard = async () => {\n    let mount = true;\n    await axios.delete(`https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`);\n    const getBoards = await axios.get(`https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`);\n\n    if (mount) {\n      setHomePageData(getBoards.data);\n    }\n\n    return () => {\n      mount = false;\n    };\n  }; // const upDateBoardCard = async () => {\n  //   await axios.put(\n  //     `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n  //   )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-card\",\n      style: {\n        backgroundImage: `url(${value.prefs.backgroundImage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/dashBoard:${value.id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"homepage-card-data\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, value.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-icon-container\",\n        children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n          className: \"delete-icon\",\n          onClick: deleteBoardCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  setHomePageData: PropTypes.func.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","AiFillDelete","axios","config","Link","Card","value","setHomePageData","deleteBoardCard","mount","delete","id","key","token","getBoards","get","data","backgroundImage","prefs","backgroundPosition","backgroundSize","backgroundRepeat","textDecoration","name","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAd,EAA0C;AACxC,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAIC,KAAK,GAAG,IAAZ;AACA,UAAMP,KAAK,CAACQ,MAAN,CACH,mCAAkCJ,KAAK,CAACK,EAAG,QAAOR,MAAM,CAACS,GAAI,UAAST,MAAM,CAACU,KAAM,EADhF,CAAN;AAGA,UAAMC,SAAS,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACrB,kDAAiDZ,MAAM,CAACS,GAAI,UAAST,MAAM,CAACU,KAAM,EAD7D,CAAxB;;AAGA,QAAIJ,KAAJ,EAAW;AACTF,MAAAA,eAAe,CAACO,SAAS,CAACE,IAAX,CAAf;AACD;;AACD,WAAO,MAAM;AACXP,MAAAA,KAAK,GAAG,KAAR;AACD,KAFD;AAGD,GAdD,CADwC,CAgBxC;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLQ,QAAAA,eAAe,EAAG,OAAMX,KAAK,CAACY,KAAN,CAAYD,eAAgB,GAD/C;AAELE,QAAAA,kBAAkB,EAAE,QAFf;AAGLC,QAAAA,cAAc,EAAE,OAHX;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAFT;AAAA,8BASE,QAAC,IAAD;AAEE,QAAA,EAAE,EAAG,cAAaf,KAAK,CAACK,EAAG,EAF7B;AAGE,QAAA,KAAK,EAAE;AAAEW,UAAAA,cAAc,EAAE;AAAlB,SAHT;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAA,sBAAKhB,KAAK,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF,SACOjB,KAAK,CAACK,EADb;AAAA;AAAA;AAAA;AAAA,cATF,eAkBE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,aAAxB;AAAsC,UAAA,OAAO,EAAEH;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;KAhDQH,I;AAkDTA,IAAI,CAACmB,SAAL,GAAiB;AACflB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,MAAV,CAAiBC,UADT;AAEfnB,EAAAA,eAAe,EAAEP,SAAS,CAAC2B,IAAV,CAAeD;AAFjB,CAAjB;AAIA,eAAerB,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../task2.css'\nimport { AiFillDelete } from 'react-icons/ai'\n// import { GrUpdate } from 'react-icons/gr'\nimport axios from 'axios'\nimport config from '../config/config'\nimport { Link } from 'react-router-dom'\n\nfunction Card({ value, setHomePageData }) {\n  const deleteBoardCard = async () => {\n    let mount = true\n    await axios.delete(\n      `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n    )\n    const getBoards = await axios.get(\n      `https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`\n    )\n    if (mount) {\n      setHomePageData(getBoards.data)\n    }\n    return () => {\n      mount = false\n    }\n  }\n  // const upDateBoardCard = async () => {\n  //   await axios.put(\n  //     `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n  //   )\n  // }\n\n  return (\n    <div>\n      <div\n        className=\"homepage-card\"\n        style={{\n          backgroundImage: `url(${value.prefs.backgroundImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <Link\n          key={value.id}\n          to={`/dashBoard:${value.id}`}\n          style={{ textDecoration: 'none' }}\n        >\n          <div className=\"homepage-card-data\">\n            <h1>{value.name}</h1>\n          </div>\n        </Link>\n        <div className=\"delete-icon-container\">\n          <AiFillDelete className=\"delete-icon\" onClick={deleteBoardCard} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  setHomePageData: PropTypes.func.isRequired\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}