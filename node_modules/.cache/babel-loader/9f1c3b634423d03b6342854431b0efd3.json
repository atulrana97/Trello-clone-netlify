{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Videos/tasks/src/task1-ToDoList/ToDo.js\";\nimport React, { Component } from 'react';\nimport './ToDo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToDo extends Component {\n  constructor() {\n    super();\n\n    this.addItems = e => {\n      e.preventDefault();\n      const newItem = this.state.currentItem;\n\n      if (newItem.value !== '') {\n        const items = [...this.state.toDoArray, newItem];\n        this.setState({\n          toDoArray: items,\n          currentItem: {\n            key: '',\n            value: ''\n          }\n        });\n        this.listContainer.current.style.border = 'solid 0.3rem black';\n        this.listContainer.current.style.boxShadow = '0.125rem 0.125rem rgb(212, 96, 96)';\n      }\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        currentItem: {\n          key: Date.now(),\n          value: e.target.value\n        }\n      });\n    };\n\n    this.deleteItem = key => {\n      const filteredItems = this.state.toDoArray.filter(item => item.key !== key);\n      this.setState({\n        toDoArray: filteredItems\n      });\n\n      if (this.state.toDoArray.length === 1) {\n        this.listContainer.current.style.border = 'solid 0rem black';\n        this.listContainer.current.style.boxShadow = '0rem 0rem rgb(212, 96, 96)';\n      }\n    };\n\n    this.updateToDoArray = (event, key) => {\n      console.log('items:' + this.state.toDoArray);\n      const items = this.state.toDoArray;\n      items.map(item => {\n        item.value = item.key === key ? event.target.value : item.value;\n        return item;\n      });\n      this.setState({\n        toDoArray: items\n      });\n    };\n\n    this.state = {\n      toDoArray: [],\n      currentItem: {\n        key: '',\n        value: ''\n      }\n    };\n    this.listContainer = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"final-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"heading\",\n        \"data-testid\": \"toDoTitle\",\n        children: [\"To Do (\", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"toDoCount\",\n          children: this.state.toDoArray.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addItems,\n        \"data-testid\": \"formTestId\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"todo-input\",\n          type: \"text\",\n          onChange: this.handleInputChange,\n          \"data-testid\": \"inputTextField\",\n          value: this.state.currentItem.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          \"data-testid\": \"submitBtn\",\n          type: \"submit\",\n          value: \"Add Item\",\n          name: \"AddItem\",\n          className: \"submit-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-container\",\n        id: \"toDoContainer\",\n        ref: this.listContainer,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items-list\",\n          children: this.state.toDoArray.map(ele => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"items\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                \"data-testid\": \"addedItem\",\n                type: \"text\",\n                id: ele.key,\n                value: ele.value,\n                onChange: e => {\n                  this.updateToDoArray(e, ele.key);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-testid\": \"deleteBtn\",\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => {\n                this.deleteItem(ele.key);\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, ele.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/raramuri/Videos/tasks/src/task1-ToDoList/ToDo.js"],"names":["React","Component","ToDo","constructor","addItems","e","preventDefault","newItem","state","currentItem","value","items","toDoArray","setState","key","listContainer","current","style","border","boxShadow","handleInputChange","Date","now","target","deleteItem","filteredItems","filter","item","length","updateToDoArray","event","console","log","map","createRef","render","ele"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './ToDo.css'\n\nclass ToDo extends Component {\n  constructor() {\n    super()\n    this.state = {\n      toDoArray: [],\n      currentItem: {\n        key: '',\n        value: ''\n      }\n    }\n    this.listContainer = React.createRef()\n  }\n\n  addItems = (e) => {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    if (newItem.value !== '') {\n      const items = [...this.state.toDoArray, newItem]\n      this.setState({\n        toDoArray: items,\n        currentItem: {\n          key: '',\n          value: ''\n        }\n      })\n      this.listContainer.current.style.border = 'solid 0.3rem black'\n      this.listContainer.current.style.boxShadow =\n        '0.125rem 0.125rem rgb(212, 96, 96)'\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      currentItem: {\n        key: Date.now(),\n        value: e.target.value\n      }\n    })\n  }\n\n  deleteItem = (key) => {\n    const filteredItems = this.state.toDoArray.filter(\n      (item) => item.key !== key\n    )\n    this.setState({\n      toDoArray: filteredItems\n    })\n    if (this.state.toDoArray.length === 1) {\n      this.listContainer.current.style.border = 'solid 0rem black'\n      this.listContainer.current.style.boxShadow = '0rem 0rem rgb(212, 96, 96)'\n    }\n  }\n\n  updateToDoArray = (event, key) => {\n    console.log('items:' + this.state.toDoArray)\n    const items = this.state.toDoArray\n    items.map((item) => {\n      item.value = item.key === key ? event.target.value : item.value\n      return item\n    })\n    this.setState({\n      toDoArray: items\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"final-container\">\n        <h1 id=\"heading\" data-testid=\"toDoTitle\">\n          To Do (\n          <span data-testid=\"toDoCount\">{this.state.toDoArray.length}</span>)\n        </h1>\n        <form onSubmit={this.addItems} data-testid=\"formTestId\">\n          <input\n            className=\"todo-input\"\n            type=\"text\"\n            onChange={this.handleInputChange}\n            data-testid=\"inputTextField\"\n            value={this.state.currentItem.value}\n          ></input>\n          <input\n            data-testid=\"submitBtn\"\n            type=\"submit\"\n            value=\"Add Item\"\n            name=\"AddItem\"\n            className=\"submit-btn\"\n          />\n        </form>\n        <div\n          className=\"todo-container\"\n          id=\"toDoContainer\"\n          ref={this.listContainer}\n        >\n          <ul className=\"items-list\">\n            {this.state.toDoArray.map((ele) => (\n              <li className=\"items\" key={ele.key}>\n                <p>\n                  <input\n                    data-testid=\"addedItem\"\n                    type=\"text\"\n                    id={ele.key}\n                    value={ele.value}\n                    onChange={(e) => {\n                      this.updateToDoArray(e, ele.key)\n                    }}\n                  ></input>\n                </p>\n                <button\n                  data-testid=\"deleteBtn\"\n                  type=\"button\"\n                  className=\"delete-button\"\n                  onClick={() => {\n                    this.deleteItem(ele.key)\n                  }}\n                >\n                  Remove\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\nexport default ToDo\n"]},"metadata":{},"sourceType":"module"}