{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport config from '../config/config';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  listId,\n  boardId,\n  getCardsForList\n}) {\n  _s();\n\n  const formStyling = useRef(null);\n  const [newCardName, setCardName] = useState('');\n\n  const handleNewCard = e => {\n    setCardName(e.target.value);\n  };\n\n  const addNewCard = async e => {\n    e.preventDefault();\n    await axios.post(`https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`);\n    const getCards = await axios.get(`https://api.trello.com/1/boards/${boardId}/cards?key=${config.key}&token=${config.token}`);\n    getCardsForList(getCards.data);\n    setCardName('');\n    openForm();\n  };\n\n  const openForm = e => {\n    e.preventDefault();\n\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'block';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-card\",\n            onClick: e => openForm(e),\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create New Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-card-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              ref: formStyling,\n              onSubmit: addNewCard,\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                placeholder: \"Card Name\",\n                onChange: handleNewCard\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Add Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"xACrAReSyin/QX599Al89gBL5kE=\");\n\n_c = AddCard;\nAddCard.propTypes = {\n  listId: PropTypes.string,\n  boardId: PropTypes.string,\n  getCardsForList: PropTypes.func\n};\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddCard.js"],"names":["React","useState","useRef","axios","config","PropTypes","AddCard","listId","boardId","getCardsForList","formStyling","newCardName","setCardName","handleNewCard","e","target","value","addNewCard","preventDefault","post","key","token","getCards","get","data","openForm","current","style","display","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport config from '../config/config'\nimport PropTypes from 'prop-types'\n\nfunction AddCard({ listId, boardId, getCardsForList }) {\n  const formStyling = useRef(null)\n  const [newCardName, setCardName] = useState('')\n  const handleNewCard = (e) => {\n    setCardName(e.target.value)\n  }\n  const addNewCard = async (e) => {\n    e.preventDefault()\n    await axios.post(\n      `https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`\n    )\n    const getCards = await axios.get(\n      `https://api.trello.com/1/boards/${boardId}/cards?key=${config.key}&token=${config.token}`\n    )\n    getCardsForList(getCards.data)\n    setCardName('')\n    openForm()\n  }\n  const openForm = (e) => {\n    e.preventDefault()\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'block'\n    }\n  }\n  return (\n    <div>\n      <div>\n        <div className=\"add-button-wrapper\">\n          <div className=\"add-new-card\">\n            <div className=\"add-card\" onClick={(e) => openForm(e)}>\n              <h1>Create New Card</h1>\n            </div>\n            <div className=\"add-card-form\">\n              <form ref={formStyling} onSubmit={addNewCard}>\n                <textarea\n                  type=\"text\"\n                  placeholder=\"Card Name\"\n                  onChange={handleNewCard}\n                ></textarea>\n                <input type=\"submit\" value=\"Add Card\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nAddCard.propTypes = {\n  listId: PropTypes.string,\n  boardId: PropTypes.string,\n  getCardsForList: PropTypes.func\n}\n\nexport default AddCard\n"]},"metadata":{},"sourceType":"module"}