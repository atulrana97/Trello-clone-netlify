{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../task2.css';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const onlyId = id.split('').filter(ele => ele !== ':');\n  let finalId = '';\n  onlyId.map(ele => finalId += ele);\n  const [boards, getBoards] = useState([]);\n  const [load, checkLoad] = useState(true);\n  useEffect(async () => {\n    const getLists = axios.get(`https://api.trello.com/1/boards/${id}?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`);\n    getBoards(getLists.data);\n    checkLoad(false);\n  }, []);\n  console.log(boards);\n\n  if (load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Wait Boards are loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(finalId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DashBoard\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"user \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"EGx8g66YC3eEkD5RDZ/tCns0lUw=\", false, function () {\n  return [useParams];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/Dashboard.js"],"names":["React","useParams","Dashboard","id","onlyId","split","filter","ele","finalId","map","boards","getBoards","useState","load","checkLoad","useEffect","getLists","axios","get","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAMG,MAAM,GAAGD,EAAE,CAACE,KAAH,CAAS,EAAT,EAAaC,MAAb,CAAqBC,GAAD,IAASA,GAAG,KAAK,GAArC,CAAf;AACA,MAAIC,OAAO,GAAG,EAAd;AACAJ,EAAAA,MAAM,CAACK,GAAP,CAAYF,GAAD,IAAUC,OAAO,IAAID,GAAhC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;AACAG,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMC,QAAQ,GAAGC,KAAK,CAACC,GAAN,CACd,mCAAkCf,EAAG,8GADvB,CAAjB;AAGAQ,IAAAA,SAAS,CAACK,QAAQ,CAACG,IAAV,CAAT;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GANQ,EAMN,EANM,CAAT;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;;AACA,MAAIG,IAAJ,EAAU;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDO,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAA,0BAAUL,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBQD,S;UACQD,S;;;KADRC,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport '../task2.css'\nimport { useParams } from 'react-router'\n\nfunction Dashboard() {\n  const { id } = useParams()\n  const onlyId = id.split('').filter((ele) => ele !== ':')\n  let finalId = ''\n  onlyId.map((ele) => (finalId += ele))\n  const [boards, getBoards] = useState([])\n  const [load, checkLoad] = useState(true)\n  useEffect(async () => {\n    const getLists = axios.get(\n      `https://api.trello.com/1/boards/${id}?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`\n    )\n    getBoards(getLists.data)\n    checkLoad(false)\n  }, [])\n  console.log(boards)\n  if (load) {\n    return <div>Wait Boards are loading</div>\n  }\n  console.log(finalId)\n  return (\n    <div className=\"DashBoard\">\n      <h1>user {id}</h1>\n    </div>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}