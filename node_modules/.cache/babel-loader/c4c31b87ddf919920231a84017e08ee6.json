{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'; // import NavBar from './components/NavBar'\n\nimport axios from 'axios';\nimport Dashboard from './pages/Dashboard';\nimport HomePage from './pages/HomePage';\nimport Card from './components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [homePageData, setHomePageData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(async () => {\n    const getHomePageData = await axios.get('https://api.trello.com/1/members/me/boards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86');\n    setHomePageData(getHomePageData.data);\n    setLoading(false);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"App is Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/trello2.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), homePageData.map(ele => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/dashBoard/${ele.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            toLoad: isLoading,\n            values: homePageData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dashBoard:id\",\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"V2dZ0td62dFLvmBBM1KqmW+tEgo=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/Main.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","axios","Dashboard","HomePage","Card","Main","homePageData","setHomePageData","isLoading","setLoading","getHomePageData","get","data","map","ele","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,SAAD,EAAYC,UAAZ,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMe,eAAe,GAAG,MAAMT,KAAK,CAACU,GAAN,CAC5B,wJAD4B,CAA9B;AAGAJ,IAAAA,eAAe,CAACG,eAAe,CAACE,IAAjB,CAAf;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAID,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,MAAD;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,mCACE;AAAK,cAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAQGF,YAAY,CAACO,GAAb,CAAkBC,GAAD,IAAS;AACzB,4BACE,QAAC,IAAD;AAAmB,UAAA,EAAE,EAAG,cAAaA,GAAG,CAACC,EAAG,EAA5C;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,MAAM,EAAEP,SAAd;AAAyB,YAAA,MAAM,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF,WAAWQ,GAAG,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,eAAlB;AAAkC,UAAA,SAAS,EAAED;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAxCQG,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\n// import NavBar from './components/NavBar'\nimport axios from 'axios'\nimport Dashboard from './pages/Dashboard'\nimport HomePage from './pages/HomePage'\nimport Card from './components/Card'\n\nfunction Main() {\n  const [homePageData, setHomePageData] = useState([])\n  const [isLoading, setLoading] = useState(true)\n  useEffect(async () => {\n    const getHomePageData = await axios.get(\n      'https://api.trello.com/1/members/me/boards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86'\n    )\n    setHomePageData(getHomePageData.data)\n    setLoading(false)\n  }, [])\n\n  if (isLoading) {\n    return <div>App is Loading</div>\n  }\n  return (\n    <Router>\n      <div>\n        <div className=\"navbar\">\n          <nav className=\"navbar\">\n            <Link to=\"/\">\n              <img src=\"/images/trello2.png\"></img>\n            </Link>\n          </nav>\n        </div>\n        {homePageData.map((ele) => {\n          return (\n            <Link key={ele.id} to={`/dashBoard/${ele.id}`}>\n              <Card toLoad={isLoading} values={homePageData}></Card>\n            </Link>\n          )\n        })}\n      </div>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route exact path=\"/dashBoard:id\" component={Dashboard}></Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\nexport default Main\n"]},"metadata":{},"sourceType":"module"}