{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/DashBoardLists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport config from '../config/config';\nimport { BsThreeDots } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashBoardLists({\n  list,\n  getBoardsLists\n}) {\n  _s();\n\n  const [currentListName, setCurrentListName] = useState(list.name);\n  const [loadingUpdate, setLoadingUpdate] = useState(false);\n\n  const listChangeHandler = e => {\n    setCurrentListName(e.target.value);\n  };\n\n  const updateListName = async (e, listId) => {\n    e.preventDefault();\n    setLoadingUpdate(true);\n    await axios.put(`https://api.trello.com/1/lists/${listId}?key=${config.key}&token=${config.token}&name=${currentListName}`);\n    const getLists = await axios.get(`https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`);\n    getBoardsLists(getLists.data);\n    setLoadingUpdate(false);\n  };\n\n  const archiveList = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=${config.key}&token=${config.token}&value=true`);\n    const getLists = await axios.get(`https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`);\n    getBoardsLists(getLists.data);\n  };\n\n  const inputField = loadingUpdate ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-card-loading\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"loading.gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: currentListName,\n    \"data-testid\": \"listNameInputField\",\n    onChange: e => {\n      listChangeHandler(e);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-name-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-list-name\",\n      \"data-testid\": \"openListForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          updateListName(e, list.id);\n        },\n        children: [inputField, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"update\",\n          \"data-testid\": \"updateListSubmitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-list-button\",\n      children: /*#__PURE__*/_jsxDEV(BsThreeDots, {\n        onClick: () => archiveList(list.id),\n        \"data-testid\": \"archiveListButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashBoardLists, \"oorSSHUs4iVG/WpD/5frpO5qJgI=\");\n\n_c = DashBoardLists;\nDashBoardLists.propTypes = {\n  list: PropTypes.object,\n  getBoardsLists: PropTypes.func\n};\nexport default DashBoardLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoardLists\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/DashBoardLists.js"],"names":["React","useState","PropTypes","axios","config","BsThreeDots","DashBoardLists","list","getBoardsLists","currentListName","setCurrentListName","name","loadingUpdate","setLoadingUpdate","listChangeHandler","e","target","value","updateListName","listId","preventDefault","put","key","token","getLists","get","idBoard","data","archiveList","inputField","id","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport config from '../config/config'\nimport { BsThreeDots } from 'react-icons/bs'\n\nfunction DashBoardLists({ list, getBoardsLists }) {\n  const [currentListName, setCurrentListName] = useState(list.name)\n\n  const [loadingUpdate, setLoadingUpdate] = useState(false)\n\n  const listChangeHandler = (e) => {\n    setCurrentListName(e.target.value)\n  }\n  const updateListName = async (e, listId) => {\n    e.preventDefault()\n    setLoadingUpdate(true)\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}?key=${config.key}&token=${config.token}&name=${currentListName}`\n    )\n    const getLists = await axios.get(\n      `https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`\n    )\n    getBoardsLists(getLists.data)\n    setLoadingUpdate(false)\n  }\n  const archiveList = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=${config.key}&token=${config.token}&value=true`\n    )\n    const getLists = await axios.get(\n      `https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`\n    )\n    getBoardsLists(getLists.data)\n  }\n  const inputField = loadingUpdate ? (\n    <div className=\"update-card-loading\">\n      <img src=\"loading.gif\" />\n    </div>\n  ) : (\n    <input\n      type=\"text\"\n      value={currentListName}\n      data-testid=\"listNameInputField\"\n      onChange={(e) => {\n        listChangeHandler(e)\n      }}\n    />\n  )\n  return (\n    <div className=\"list-name-container\">\n      <div className=\"board-list-name\" data-testid=\"openListForm\">\n        <form\n          onSubmit={(e) => {\n            updateListName(e, list.id)\n          }}\n        >\n          {inputField}\n          <input\n            type=\"submit\"\n            value=\"update\"\n            data-testid=\"updateListSubmitButton\"\n          />\n        </form>\n      </div>\n      <div className=\"archive-list-button\">\n        <BsThreeDots\n          onClick={() => archiveList(list.id)}\n          data-testid=\"archiveListButton\"\n        />\n      </div>\n    </div>\n  )\n}\nDashBoardLists.propTypes = {\n  list: PropTypes.object,\n  getBoardsLists: PropTypes.func\n}\nexport default DashBoardLists\n"]},"metadata":{},"sourceType":"module"}