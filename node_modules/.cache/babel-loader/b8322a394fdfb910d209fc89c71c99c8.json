{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport config from '../config/config';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList({\n  boardId,\n  getBoardsLists\n}) {\n  _s();\n\n  const formStyling = useRef(null);\n  const [newListName, setListName] = useState('');\n\n  const handleNewList = e => {\n    setListName(e.target.value);\n  };\n\n  const addNewList = async e => {\n    e.preventDefault();\n    await axios.post(`https://api.trello.com/1/lists?key=${config.key}&token=${config.token}&name=${newListName}&idBoard=${boardId}`);\n    setListName('');\n    const getLists = await axios.get(`https://api.trello.com/1/boards/${boardId}/lists?key=${config.key}&token=${config.token}`);\n    getBoardsLists(getLists.data);\n    openForm();\n  };\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'block';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-button-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-new-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-list\",\n        \"data-testid\": \"openAddListForm\",\n        onClick: openForm,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-board-form\",\n        ref: formStyling,\n        onSubmit: addNewList,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"List Name\",\n          \"data-testid\": \"inputNewListName\",\n          onChange: handleNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add List\",\n          \"data-testid\": \"createNewListSubmitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddList, \"mvYpnvjt1/u4ofBBBIYzfkChCCE=\");\n\n_c = AddList;\nAddList.propTypes = {\n  boardId: PropTypes.string,\n  getBoardsLists: PropTypes.func\n};\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddList.js"],"names":["React","useState","useRef","axios","config","PropTypes","AddList","boardId","getBoardsLists","formStyling","newListName","setListName","handleNewList","e","target","value","addNewList","preventDefault","post","key","token","getLists","get","data","openForm","current","style","display","propTypes","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAjB,EAA8C;AAAA;;AAC5C,QAAMC,WAAW,GAAGP,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM,CAACQ,WAAD,EAAcC,WAAd,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;;AACA,QAAMW,aAAa,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,MAAOH,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMd,KAAK,CAACe,IAAN,CACH,sCAAqCd,MAAM,CAACe,GAAI,UAASf,MAAM,CAACgB,KAAM,SAAQV,WAAY,YAAWH,OAAQ,EAD1G,CAAN;AAGAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,UAAMU,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACpB,mCAAkCf,OAAQ,cAAaH,MAAM,CAACe,GAAI,UAASf,MAAM,CAACgB,KAAM,EADpE,CAAvB;AAGAZ,IAAAA,cAAc,CAACa,QAAQ,CAACE,IAAV,CAAd;AACAC,IAAAA,QAAQ;AACT,GAXD;;AAYA,QAAMA,QAAQ,GAAG,MAAM;AACrB,QAAIf,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,KAAsC,OAA1C,EAAmD;AACjDlB,MAAAA,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;AACD,KAFD,MAEO;AACLlB,MAAAA,WAAW,CAACgB,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,OAApC;AACD;AACF,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,uBAAY,iBAFd;AAGE,QAAA,OAAO,EAAEH,QAHX;AAAA,+BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,GAAG,EAAEf,WAFP;AAGE,QAAA,QAAQ,EAAEO,UAHZ;AAAA,gCAKE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,yBAAY,kBAHd;AAIE,UAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAWE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,yBAAY;AAHd;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAvDQN,O;;KAAAA,O;AAwDTA,OAAO,CAACsB,SAAR,GAAoB;AAClBrB,EAAAA,OAAO,EAAEF,SAAS,CAACwB,MADD;AAElBrB,EAAAA,cAAc,EAAEH,SAAS,CAACyB;AAFR,CAApB;AAKA,eAAexB,OAAf","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport config from '../config/config'\nimport PropTypes from 'prop-types'\n\nfunction AddList({ boardId, getBoardsLists }) {\n  const formStyling = useRef(null)\n  const [newListName, setListName] = useState('')\n  const handleNewList = (e) => {\n    setListName(e.target.value)\n  }\n  const addNewList = async (e) => {\n    e.preventDefault()\n    await axios.post(\n      `https://api.trello.com/1/lists?key=${config.key}&token=${config.token}&name=${newListName}&idBoard=${boardId}`\n    )\n    setListName('')\n    const getLists = await axios.get(\n      `https://api.trello.com/1/boards/${boardId}/lists?key=${config.key}&token=${config.token}`\n    )\n    getBoardsLists(getLists.data)\n    openForm()\n  }\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'block'\n    }\n  }\n  return (\n    <div className=\"add-button-wrapper\">\n      <div className=\"add-new-list\">\n        <div\n          className=\"add-list\"\n          data-testid=\"openAddListForm\"\n          onClick={openForm}\n        >\n          <h1>Create New List</h1>\n        </div>\n        <form\n          className=\"add-board-form\"\n          ref={formStyling}\n          onSubmit={addNewList}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"List Name\"\n            data-testid=\"inputNewListName\"\n            onChange={handleNewList}\n          ></input>\n          <input\n            type=\"submit\"\n            value=\"Add List\"\n            data-testid=\"createNewListSubmitButton\"\n          />\n        </form>\n      </div>\n    </div>\n  )\n}\nAddList.propTypes = {\n  boardId: PropTypes.string,\n  getBoardsLists: PropTypes.func\n}\n\nexport default AddList\n"]},"metadata":{},"sourceType":"module"}