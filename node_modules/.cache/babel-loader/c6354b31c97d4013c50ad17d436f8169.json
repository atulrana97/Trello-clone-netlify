{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Videos/tasks/src/Task2-Trello Clone/components/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport config from '../config/config';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  listId,\n  boardId,\n  getCardsForList\n}) {\n  _s();\n\n  const formStyling = useRef(null);\n  const [newCardName, setCardName] = useState('');\n\n  const handleNewCard = e => {\n    setCardName(e.target.value);\n  };\n\n  const addNewCard = async e => {\n    e.preventDefault();\n\n    if (newCardName !== '') {\n      await axios.post(`https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`);\n      const getCards = await axios.get(`https://api.trello.com/1/boards/${boardId}/cards?key=${config.key}&token=${config.token}`);\n      getCardsForList(getCards.data);\n      setCardName('');\n      openForm();\n    }\n  };\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'flex') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'flex';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-card-button-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-new-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-card\",\n        onClick: openForm,\n        \"data-testid\": \"openAddCardForm\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"+ Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-card-form\",\n        ref: formStyling,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: addNewCard,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            placeholder: \"Enter a title for this card...\",\n            value: newCardName,\n            onChange: handleNewCard,\n            \"data-testid\": \"inputNewCardName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Add Card\",\n            \"data-testid\": \"createNewCardSubmitButton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"xACrAReSyin/QX599Al89gBL5kE=\");\n\n_c = AddCard;\nAddCard.propTypes = {\n  listId: PropTypes.string,\n  boardId: PropTypes.string,\n  getCardsForList: PropTypes.func\n};\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/home/raramuri/Videos/tasks/src/Task2-Trello Clone/components/AddCard.js"],"names":["React","useState","useRef","axios","config","PropTypes","AddCard","listId","boardId","getCardsForList","formStyling","newCardName","setCardName","handleNewCard","e","target","value","addNewCard","preventDefault","post","key","token","getCards","get","data","openForm","current","style","display","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport config from '../config/config'\nimport PropTypes from 'prop-types'\n\nfunction AddCard({ listId, boardId, getCardsForList }) {\n  const formStyling = useRef(null)\n  const [newCardName, setCardName] = useState('')\n  const handleNewCard = (e) => {\n    setCardName(e.target.value)\n  }\n  const addNewCard = async (e) => {\n    e.preventDefault()\n    if (newCardName !== '') {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`\n      )\n      const getCards = await axios.get(\n        `https://api.trello.com/1/boards/${boardId}/cards?key=${config.key}&token=${config.token}`\n      )\n      getCardsForList(getCards.data)\n      setCardName('')\n      openForm()\n    }\n  }\n  const openForm = () => {\n    if (formStyling.current.style.display === 'flex') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'flex'\n    }\n  }\n  return (\n    <div className=\"add-card-button-wrapper\">\n      <div className=\"add-new-card\">\n        <div\n          className=\"add-card\"\n          onClick={openForm}\n          data-testid=\"openAddCardForm\"\n        >\n          <h1>+ Add Card</h1>\n        </div>\n        <div className=\"add-card-form\" ref={formStyling}>\n          <form className=\"form\" onSubmit={addNewCard}>\n            <textarea\n              type=\"text\"\n              placeholder=\"Enter a title for this card...\"\n              value={newCardName}\n              onChange={handleNewCard}\n              data-testid=\"inputNewCardName\"\n            ></textarea>\n            <input\n              type=\"submit\"\n              value=\"Add Card\"\n              data-testid=\"createNewCardSubmitButton\"\n            />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\nAddCard.propTypes = {\n  listId: PropTypes.string,\n  boardId: PropTypes.string,\n  getCardsForList: PropTypes.func\n}\n\nexport default AddCard\n"]},"metadata":{},"sourceType":"module"}