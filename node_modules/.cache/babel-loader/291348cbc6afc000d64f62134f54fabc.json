{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../task2.css';\nimport { AiFillDelete } from 'react-icons/ai'; // import { GrUpdate } from 'react-icons/gr'\n\nimport axios from 'axios';\nimport config from '../config/config';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  toLoad,\n  value,\n  setHomePageData\n}) {\n  const deleteBoardCard = async () => {\n    await axios.delete(`https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`);\n    const getBoards = await axios.get(`https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`);\n    setHomePageData(getBoards.data);\n  }; // const upDateBoardCard = async () => {\n  //   await axios.put(\n  //     `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n  //   )\n  // }\n\n\n  if (toLoad === false) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"loading ...\", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage-card\",\n        style: {\n          backgroundImage: `url(${value.prefs.backgroundImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/dashBoard:${value.id}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"homepage-card-data\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, value.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-icon-container\",\n          children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n            className: \"delete-icon\",\n            onClick: deleteBoardCard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool,\n  setHomePageData: PropTypes.func.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","AiFillDelete","axios","config","BrowserRouter","Router","Link","Card","toLoad","value","setHomePageData","deleteBoardCard","delete","id","key","token","getBoards","get","data","backgroundImage","prefs","backgroundPosition","backgroundSize","backgroundRepeat","textDecoration","name","propTypes","object","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,YAAT,QAA6B,gBAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAd,EAAkD;AAChD,QAAMC,eAAe,GAAG,YAAY;AAClC,UAAMT,KAAK,CAACU,MAAN,CACH,mCAAkCH,KAAK,CAACI,EAAG,QAAOV,MAAM,CAACW,GAAI,UAASX,MAAM,CAACY,KAAM,EADhF,CAAN;AAGA,UAAMC,SAAS,GAAG,MAAMd,KAAK,CAACe,GAAN,CACrB,kDAAiDd,MAAM,CAACW,GAAI,UAASX,MAAM,CAACY,KAAM,EAD7D,CAAxB;AAGAL,IAAAA,eAAe,CAACM,SAAS,CAACE,IAAX,CAAf;AACD,GARD,CADgD,CAUhD;AACA;AACA;AACA;AACA;;;AACA,MAAIV,MAAM,KAAK,KAAf,EAAsB;AACpB;;AAAC;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGF;;AAED,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,KAAK,EAAE;AACLW,UAAAA,eAAe,EAAG,OAAMV,KAAK,CAACW,KAAN,CAAYD,eAAgB,GAD/C;AAELE,UAAAA,kBAAkB,EAAE,QAFf;AAGLC,UAAAA,cAAc,EAAE,OAHX;AAILC,UAAAA,gBAAgB,EAAE;AAJb,SAFT;AAAA,gCASE,QAAC,IAAD;AAEE,UAAA,EAAE,EAAG,cAAad,KAAK,CAACI,EAAG,EAF7B;AAGE,UAAA,KAAK,EAAE;AAAEW,YAAAA,cAAc,EAAE;AAAlB,WAHT;AAAA,iCAKE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,mCACE;AAAA,wBAAKf,KAAK,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF,WACOhB,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,gBATF,eAkBE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,SAAS,EAAC,aAAxB;AAAsC,YAAA,OAAO,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;KAjDQJ,I;AAmDTA,IAAI,CAACmB,SAAL,GAAiB;AACfjB,EAAAA,KAAK,EAAET,SAAS,CAAC2B,MAAV,CAAiBC,UADT;AAEfpB,EAAAA,MAAM,EAAER,SAAS,CAAC6B,IAFH;AAGfnB,EAAAA,eAAe,EAAEV,SAAS,CAAC8B,IAAV,CAAeF;AAHjB,CAAjB;AAKA,eAAerB,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../task2.css'\nimport { AiFillDelete } from 'react-icons/ai'\n// import { GrUpdate } from 'react-icons/gr'\nimport axios from 'axios'\nimport config from '../config/config'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\n\nfunction Card({ toLoad, value, setHomePageData }) {\n  const deleteBoardCard = async () => {\n    await axios.delete(\n      `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n    )\n    const getBoards = await axios.get(\n      `https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`\n    )\n    setHomePageData(getBoards.data)\n  }\n  // const upDateBoardCard = async () => {\n  //   await axios.put(\n  //     `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n  //   )\n  // }\n  if (toLoad === false) {\n    ;<div>\n      loading ...<h1></h1>\n    </div>\n  }\n\n  return (\n    <Router>\n      <div>\n        <div\n          className=\"homepage-card\"\n          style={{\n            backgroundImage: `url(${value.prefs.backgroundImage})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat'\n          }}\n        >\n          <Link\n            key={value.id}\n            to={`/dashBoard:${value.id}`}\n            style={{ textDecoration: 'none' }}\n          >\n            <div className=\"homepage-card-data\">\n              <h1>{value.name}</h1>\n            </div>\n          </Link>\n          <div className=\"delete-icon-container\">\n            <AiFillDelete className=\"delete-icon\" onClick={deleteBoardCard} />\n          </div>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool,\n  setHomePageData: PropTypes.func.isRequired\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}