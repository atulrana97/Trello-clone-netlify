{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport config from '../config/config';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCard({\n  listId\n}) {\n  _s();\n\n  const formStyling = useRef(null);\n  const [newCardName, setBoardName] = useState('');\n\n  const handleNewCard = e => {\n    setBoardName(e.target.value);\n  };\n\n  const addNewCard = async e => {\n    e.preventDefault();\n    await axios.post(`https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`);\n    setBoardName('');\n  };\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'block';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new-board\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-card\",\n            onClick: openForm,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create New Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"add-board-form\",\n            ref: formStyling,\n            onSubmit: addNewCard,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"BoardName\",\n              onChange: handleNewCard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCard, \"PKdY7UDDgMu7RLKOg4C87mKobqM=\");\n\n_c = AddCard;\nAddCard.propTypes = {\n  listId: PropTypes.string\n};\nexport default AddCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCard\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddCard.js"],"names":["React","useState","useRef","axios","config","PropTypes","AddCard","listId","formStyling","newCardName","setBoardName","handleNewCard","e","target","value","addNewCard","preventDefault","post","key","token","openForm","current","style","display","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6B;AAAA;;AAC3B,QAAMC,WAAW,GAAGN,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM,CAACO,WAAD,EAAcC,YAAd,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMU,aAAa,GAAIC,CAAD,IAAO;AAC3BF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAG,MAAOH,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMb,KAAK,CAACc,IAAN,CACH,sCAAqCb,MAAM,CAACc,GAAI,UAASd,MAAM,CAACe,KAAM,WAAUZ,MAAO,SAAQE,WAAY,EADxG,CAAN;AAGAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAND;;AAOA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAIZ,WAAW,CAACa,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,KAAsC,OAA1C,EAAmD;AACjDf,MAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,MAApC;AACD,KAFD,MAEO;AACLf,MAAAA,WAAW,CAACa,OAAZ,CAAoBC,KAApB,CAA0BC,OAA1B,GAAoC,OAApC;AACD;AACF,GAND;;AAOA,sBACE;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,OAAO,EAAEH,QAAnC;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,GAAG,EAAEZ,WAFP;AAGE,YAAA,QAAQ,EAAEO,UAHZ;AAAA,oCAKE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,WAFd;AAGE,cAAA,QAAQ,EAAEJ;AAHZ;AAAA;AAAA;AAAA;AAAA,oBALF,eAUE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7CQL,O;;KAAAA,O;AA8CTA,OAAO,CAACkB,SAAR,GAAoB;AAClBjB,EAAAA,MAAM,EAAEF,SAAS,CAACoB;AADA,CAApB;AAIA,eAAenB,OAAf","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport config from '../config/config'\nimport PropTypes from 'prop-types'\n\nfunction AddCard({ listId }) {\n  const formStyling = useRef(null)\n  const [newCardName, setBoardName] = useState('')\n  const handleNewCard = (e) => {\n    setBoardName(e.target.value)\n  }\n  const addNewCard = async (e) => {\n    e.preventDefault()\n    await axios.post(\n      `https://api.trello.com/1/cards?key=${config.key}&token=${config.token}&idList=${listId}&name=${newCardName}`\n    )\n    setBoardName('')\n  }\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'block'\n    }\n  }\n  return (\n    <div>\n      <div>\n        <div className=\"add-button-wrapper\">\n          <div className=\"add-new-board\">\n            <div className=\"add-card\" onClick={openForm}>\n              <h1>Create New Card</h1>\n            </div>\n            <form\n              className=\"add-board-form\"\n              ref={formStyling}\n              onSubmit={addNewCard}\n            >\n              <input\n                type=\"text\"\n                placeholder=\"BoardName\"\n                onChange={handleNewCard}\n              ></input>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nAddCard.propTypes = {\n  listId: PropTypes.string\n}\n\nexport default AddCard\n"]},"metadata":{},"sourceType":"module"}