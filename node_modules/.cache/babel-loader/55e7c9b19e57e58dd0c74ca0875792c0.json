{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from '../components/Card';\nimport NavBar from '../components/NavBar';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const [homePageData, setHomePageData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(async () => {\n    const getHomePageData = await axios.get('https://api.trello.com/1/members/me/boards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86');\n    setLoading(false);\n    setHomePageData(getHomePageData.data);\n  }, []);\n\n  if (isLoading) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: \"App is Loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        values: homePageData,\n        toLoad: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"V2dZ0td62dFLvmBBM1KqmW+tEgo=\");\n\n_c = HomePage;\nHomePage.propTypes = {\n  homePageData: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isLoading\n};\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/HomePage.js"],"names":["React","Card","NavBar","PropTypes","HomePage","homePageData","setHomePageData","useState","isLoading","setLoading","useEffect","getHomePageData","axios","get","data","propTypes","array","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BF,QAAQ,CAAC,IAAD,CAAxC;AACAG,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMC,eAAe,GAAG,MAAMC,KAAK,CAACC,GAAN,CAC5B,wJAD4B,CAA9B;AAGAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,IAAAA,eAAe,CAACK,eAAe,CAACG,IAAjB,CAAf;AACD,GANQ,EAMN,EANM,CAAT;;AAOA,MAAIN,SAAJ,EAAe;AACb;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACF;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAEH,YAAd;AAA4B,QAAA,MAAM,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBQJ,Q;;KAAAA,Q;AAsBTA,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,YAAY,EAAEF,SAAS,CAACa,KAAV,CAAgBC,UADX;AAEnBT,EAAAA,SAAS,EAAEL,SAAS,CAACe,IAAV,CAAeV;AAFP,CAArB;AAKA,eAAeJ,QAAf","sourcesContent":["import React from 'react'\nimport Card from '../components/Card'\nimport NavBar from '../components/NavBar'\nimport PropTypes from 'prop-types'\n\nfunction HomePage() {\n  const [homePageData, setHomePageData] = useState([])\n  const [isLoading, setLoading] = useState(true)\n  useEffect(async () => {\n    const getHomePageData = await axios.get(\n      'https://api.trello.com/1/members/me/boards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86'\n    )\n    setLoading(false)\n    setHomePageData(getHomePageData.data)\n  }, [])\n  if (isLoading) {\n    ;<div>App is Loading </div>\n  }\n  return (\n    <div>\n      <NavBar />\n      <div className=\"home-page-container\">\n        <Card values={homePageData} toLoad={isLoading} />\n      </div>\n    </div>\n  )\n}\nHomePage.propTypes = {\n  homePageData: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isLoading\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}