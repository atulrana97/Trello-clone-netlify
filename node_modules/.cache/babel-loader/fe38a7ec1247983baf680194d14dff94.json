{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  toLoad,\n  values\n}) {\n  if (toLoad === false) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"loading ...\", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 6\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: values.map(ele => {\n        return /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: `/${ele.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"homepage-card\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: ele.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 19\n              }, this)\n            }, ele.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)\n          }, ele.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, ele.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  values: PropTypes.array.isRequired,\n  toLoad: PropTypes.bool.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","BrowserRouter","Router","Switch","Route","Card","toLoad","values","map","ele","id","name","key","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAkC;AAChC,MAAID,MAAM,KAAK,KAAf,EAAsB;AACpB;;AAAC;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGF;;AAED,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,gBACGC,MAAM,CAACC,GAAP,CAAYC,GAAD,IAAS;AACnB,4BACE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAG,IAAGA,GAAG,CAACC,EAAG,EAAxB;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE;AAAA,0BAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,eAAoCF,GAAG,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AADF,aAAgCD,GAAG,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AADF,WAAaD,GAAG,CAACG,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAxBQP,I;AA0BTA,IAAI,CAACQ,SAAL,GAAiB;AACfN,EAAAA,MAAM,EAAEP,SAAS,CAACc,KAAV,CAAgBC,UADT;AAEfT,EAAAA,MAAM,EAAEN,SAAS,CAACgB,IAAV,CAAeD;AAFR,CAAjB;AAIA,eAAeV,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction Card({ toLoad, values }) {\n  if (toLoad === false) {\n    ;<div>\n      loading ...<h1></h1>\n    </div>\n  }\n\n  return (\n    <Router>\n      <div>\n        {values.map((ele) => {\n          return (\n            <Switch key={ele.key}>\n              <Route path={`/${ele.id}`} key={ele.id}>\n                <div className=\"homepage-card\" key={ele.id}>\n                  <h1>{ele.name}</h1>\n                </div>\n              </Route>\n            </Switch>\n          )\n        })}\n      </div>\n    </Router>\n  )\n}\n\nCard.propTypes = {\n  values: PropTypes.array.isRequired,\n  toLoad: PropTypes.bool.isRequired\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}