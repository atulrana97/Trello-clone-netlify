{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddList({\n  boardId,\n  getBoardsLists\n}) {\n  _s();\n\n  const formStyling = useRef(null);\n  const [newListName, setListName] = useState('');\n\n  const handleNewList = e => {\n    setListName(e.target.value);\n  };\n\n  const addNewList = async e => {\n    try {\n      e.preventDefault();\n      await axios.post(`https://api.trello.com/1/lists?key=${process.env.REACT_APP_KEY}&token=${process.env.REACT_APP_TOKEN}&name=${newListName}&idBoard=${boardId}`);\n      const getLists = await axios.get(`https://api.trello.com/1/boards/${boardId}/lists?key=${process.env.REACT_APP_KEY}&token=${process.env.REACT_APP_TOKEN}`);\n      getBoardsLists(getLists.data);\n      openForm();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'flex') {\n      formStyling.current.style.display = 'none';\n      setListName('');\n    } else {\n      formStyling.current.style.display = 'flex';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-button-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-new-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-list\",\n        \"data-testid\": \"openAddListForm\",\n        onClick: openForm,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" + Add New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-board-form\",\n        ref: formStyling,\n        onSubmit: addNewList,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"List Name\",\n          \"data-testid\": \"inputNewListName\",\n          value: newListName,\n          onChange: handleNewList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add List\",\n          \"data-testid\": \"createNewListSubmitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddList, \"mvYpnvjt1/u4ofBBBIYzfkChCCE=\");\n\n_c = AddList;\nAddList.propTypes = {\n  boardId: PropTypes.string,\n  getBoardsLists: PropTypes.func\n};\nexport default AddList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddList\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/AddList.js"],"names":["React","useState","useRef","axios","PropTypes","AddList","boardId","getBoardsLists","formStyling","newListName","setListName","handleNewList","e","target","value","addNewList","preventDefault","post","process","env","REACT_APP_KEY","REACT_APP_TOKEN","getLists","get","data","openForm","console","error","current","style","display","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\n\nfunction AddList({ boardId, getBoardsLists }) {\n  const formStyling = useRef(null)\n  const [newListName, setListName] = useState('')\n  const handleNewList = (e) => {\n    setListName(e.target.value)\n  }\n  const addNewList = async (e) => {\n    try {\n      e.preventDefault()\n      await axios.post(\n        `https://api.trello.com/1/lists?key=${process.env.REACT_APP_KEY}&token=${process.env.REACT_APP_TOKEN}&name=${newListName}&idBoard=${boardId}`\n      )\n      const getLists = await axios.get(\n        `https://api.trello.com/1/boards/${boardId}/lists?key=${process.env.REACT_APP_KEY}&token=${process.env.REACT_APP_TOKEN}`\n      )\n      getBoardsLists(getLists.data)\n      openForm()\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  const openForm = () => {\n    if (formStyling.current.style.display === 'flex') {\n      formStyling.current.style.display = 'none'\n      setListName('')\n    } else {\n      formStyling.current.style.display = 'flex'\n    }\n  }\n  return (\n    <div className=\"add-button-wrapper\">\n      <div className=\"add-new-list\">\n        <div\n          className=\"add-list\"\n          data-testid=\"openAddListForm\"\n          onClick={openForm}\n        >\n          <h1> + Add New List</h1>\n        </div>\n        <form\n          className=\"add-board-form\"\n          ref={formStyling}\n          onSubmit={addNewList}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"List Name\"\n            data-testid=\"inputNewListName\"\n            value={newListName}\n            onChange={handleNewList}\n          ></input>\n          <input\n            type=\"submit\"\n            value=\"Add List\"\n            data-testid=\"createNewListSubmitButton\"\n          />\n        </form>\n      </div>\n    </div>\n  )\n}\nAddList.propTypes = {\n  boardId: PropTypes.string,\n  getBoardsLists: PropTypes.func\n}\n\nexport default AddList\n"]},"metadata":{},"sourceType":"module"}