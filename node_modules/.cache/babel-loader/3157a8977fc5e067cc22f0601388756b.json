{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport Card from '../components/Card';\nimport NavBar from '../components/NavBar';\nimport config from '../config/config';\nimport { IoPersonOutline } from 'react-icons/io5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const [homePageData, setHomePageData] = useState([]);\n  const [newBoardName, setBoardName] = useState('');\n  const formStyling = useRef(null);\n  useEffect(async () => {\n    let mounted = true;\n\n    try {\n      const getHomePageData = await axios.get(`https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`);\n\n      if (mounted) {\n        setHomePageData(getHomePageData.data);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'block';\n    }\n  };\n\n  const createNewBoard = async e => {\n    e.preventDefault();\n    await axios.post(`https://api.trello.com/1/boards/?key=${config.key}&token=${config.token}&name=${newBoardName}`);\n    const updatedBoards = await axios.get(`https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`);\n    setBoardName('');\n    setHomePageData(updatedBoards.data);\n  };\n\n  const handleBoardName = e => {\n    setBoardName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-title\",\n      \"data-testid\": \"homePageTitle\",\n      children: [/*#__PURE__*/_jsxDEV(IoPersonOutline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Person Boards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-container\",\n      children: homePageData.map(ele => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          value: ele,\n          boardState: homePageData,\n          setHomePageData: setHomePageData\n        }, ele.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-new-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-card\",\n          onClick: openForm,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create New Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"add-board-form\",\n          ref: formStyling,\n          onSubmit: createNewBoard,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"BoardName\",\n            onChange: handleBoardName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"vWGi9B8bbM5hTfyWnIq+E8Qb5lc=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/HomePage.js"],"names":["React","useEffect","useState","useRef","axios","Card","NavBar","config","IoPersonOutline","HomePage","homePageData","setHomePageData","newBoardName","setBoardName","formStyling","mounted","getHomePageData","get","key","token","data","e","console","error","openForm","current","style","display","createNewBoard","preventDefault","post","updatedBoards","handleBoardName","target","value","map","ele","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport axios from 'axios'\nimport Card from '../components/Card'\nimport NavBar from '../components/NavBar'\nimport config from '../config/config'\nimport { IoPersonOutline } from 'react-icons/io5'\n\nfunction HomePage() {\n  const [homePageData, setHomePageData] = useState([])\n  const [newBoardName, setBoardName] = useState('')\n  const formStyling = useRef(null)\n  useEffect(async () => {\n    let mounted = true\n    try {\n      const getHomePageData = await axios.get(\n        `https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`\n      )\n      if (mounted) {\n        setHomePageData(getHomePageData.data)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    return () => {\n      mounted = false\n    }\n  }, [])\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'block'\n    }\n  }\n  const createNewBoard = async (e) => {\n    e.preventDefault()\n\n    await axios.post(\n      `https://api.trello.com/1/boards/?key=${config.key}&token=${config.token}&name=${newBoardName}`\n    )\n    const updatedBoards = await axios.get(\n      `https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`\n    )\n    setBoardName('')\n    setHomePageData(updatedBoards.data)\n  }\n  const handleBoardName = (e) => {\n    setBoardName(e.target.value)\n  }\n\n  return (\n    <div className=\"home-page\">\n      <NavBar />\n      <div className=\"home-page-title\" data-testid=\"homePageTitle\">\n        <IoPersonOutline />\n        <h1>Person Boards</h1>\n      </div>\n      <div className=\"home-page-container\">\n        {homePageData.map((ele) => {\n          return (\n            <Card\n              value={ele}\n              key={ele.id}\n              boardState={homePageData}\n              setHomePageData={setHomePageData}\n            ></Card>\n          )\n        })}\n      </div>\n      <div className=\"add-button-wrapper\">\n        <div className=\"add-new-board\">\n          <div className=\"add-card\" onClick={openForm}>\n            <h1>Create New Board</h1>\n          </div>\n          <form\n            className=\"add-board-form\"\n            ref={formStyling}\n            onSubmit={createNewBoard}\n          >\n            <input\n              type=\"text\"\n              placeholder=\"BoardName\"\n              onChange={handleBoardName}\n            ></input>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}