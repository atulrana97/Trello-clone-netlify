{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../task2.css';\nimport { MdClose } from 'react-icons/md';\nimport { GrUpdate } from 'react-icons/gr';\nimport axios from 'axios';\nimport config from '../config/config';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  toLoad,\n  value,\n  setHomePageData\n}) {\n  const deleteCard = async () => {\n    await axios.delete(`https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`);\n    const getBoards = await axios.get(`https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`);\n    setHomePageData(getBoards.data);\n  };\n\n  if (toLoad === false) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"loading ...\", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-card\",\n      style: {\n        backgroundImage: `url(${value.prefs.backgroundImage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/dashBoard:${value.id}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"homepage-card-data\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, value.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MdClose, {\n        onClick: deleteCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrUpdate, {\n        className: \"update-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool,\n  setHomePageData: PropTypes.func.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","MdClose","GrUpdate","axios","config","Link","Card","toLoad","value","setHomePageData","deleteCard","delete","id","key","token","getBoards","get","data","backgroundImage","prefs","backgroundPosition","backgroundSize","backgroundRepeat","textDecoration","name","propTypes","object","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAd,EAAkD;AAChD,QAAMC,UAAU,GAAG,YAAY;AAC7B,UAAMP,KAAK,CAACQ,MAAN,CACH,mCAAkCH,KAAK,CAACI,EAAG,QAAOR,MAAM,CAACS,GAAI,UAAST,MAAM,CAACU,KAAM,EADhF,CAAN;AAGA,UAAMC,SAAS,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACrB,kDAAiDZ,MAAM,CAACS,GAAI,UAAST,MAAM,CAACU,KAAM,EAD7D,CAAxB;AAGAL,IAAAA,eAAe,CAACM,SAAS,CAACE,IAAX,CAAf;AACD,GARD;;AASA,MAAIV,MAAM,KAAK,KAAf,EAAsB;AACpB;;AAAC;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGF;;AAED,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLW,QAAAA,eAAe,EAAG,OAAMV,KAAK,CAACW,KAAN,CAAYD,eAAgB,GAD/C;AAELE,QAAAA,kBAAkB,EAAE,QAFf;AAGLC,QAAAA,cAAc,EAAE,OAHX;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAFT;AAAA,8BASE,QAAC,IAAD;AAEE,QAAA,EAAE,EAAG,cAAad,KAAK,CAACI,EAAG,EAF7B;AAGE,QAAA,KAAK,EAAE;AAAEW,UAAAA,cAAc,EAAE;AAAlB,SAHT;AAAA,+BAKE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACE;AAAA,sBAAKf,KAAK,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF,SACOhB,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,cATF,eAkBE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KAzCQJ,I;AA2CTA,IAAI,CAACmB,SAAL,GAAiB;AACfjB,EAAAA,KAAK,EAAER,SAAS,CAAC0B,MAAV,CAAiBC,UADT;AAEfpB,EAAAA,MAAM,EAAEP,SAAS,CAAC4B,IAFH;AAGfnB,EAAAA,eAAe,EAAET,SAAS,CAAC6B,IAAV,CAAeF;AAHjB,CAAjB;AAKA,eAAerB,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../task2.css'\nimport { MdClose } from 'react-icons/md'\nimport { GrUpdate } from 'react-icons/gr'\nimport axios from 'axios'\nimport config from '../config/config'\nimport { Link } from 'react-router-dom'\n\nfunction Card({ toLoad, value, setHomePageData }) {\n  const deleteCard = async () => {\n    await axios.delete(\n      `https://api.trello.com/1/boards/${value.id}?key=${config.key}&token=${config.token}`\n    )\n    const getBoards = await axios.get(\n      `https://api.trello.com/1/members/me/boards?key=${config.key}&token=${config.token}`\n    )\n    setHomePageData(getBoards.data)\n  }\n  if (toLoad === false) {\n    ;<div>\n      loading ...<h1></h1>\n    </div>\n  }\n\n  return (\n    <div>\n      <div\n        className=\"homepage-card\"\n        style={{\n          backgroundImage: `url(${value.prefs.backgroundImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <Link\n          key={value.id}\n          to={`/dashBoard:${value.id}`}\n          style={{ textDecoration: 'none' }}\n        >\n          <div className=\"homepage-card-data\">\n            <h1>{value.name}</h1>\n          </div>\n        </Link>\n        <MdClose onClick={deleteCard} />\n        <GrUpdate className=\"update-icon\" />\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool,\n  setHomePageData: PropTypes.func.isRequired\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}