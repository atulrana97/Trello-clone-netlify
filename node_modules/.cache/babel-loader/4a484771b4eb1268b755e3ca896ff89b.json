{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../task2.css';\nimport { MdClose } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  toLoad,\n  value\n}) {\n  if (toLoad === false) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"loading ...\", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 6\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-card\",\n      style: {\n        backgroundImage: `url(${value.prefs.backgroundImage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: value.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","MdClose","Card","toLoad","value","backgroundImage","prefs","backgroundPosition","backgroundSize","backgroundRepeat","name","propTypes","object","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAiC;AAC/B,MAAID,MAAM,KAAK,KAAf,EAAsB;AACpB;;AAAC;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGF;;AAED,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLE,QAAAA,eAAe,EAAG,OAAMD,KAAK,CAACE,KAAN,CAAYD,eAAgB,GAD/C;AAELE,QAAAA,kBAAkB,EAAE,QAFf;AAGLC,QAAAA,cAAc,EAAE,OAHX;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAFT;AAAA,6BASE;AAAA,gCACE;AAAA,oBAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAzBQR,I;AA2BTA,IAAI,CAACS,SAAL,GAAiB;AACfP,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADT;AAEfV,EAAAA,MAAM,EAAEH,SAAS,CAACc;AAFH,CAAjB;AAIA,eAAeZ,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../task2.css'\nimport { MdClose } from 'react-icons/md'\nfunction Card({ toLoad, value }) {\n  if (toLoad === false) {\n    ;<div>\n      loading ...<h1></h1>\n    </div>\n  }\n\n  return (\n    <div>\n      <div\n        className=\"homepage-card\"\n        style={{\n          backgroundImage: `url(${value.prefs.backgroundImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <div>\n          <h1>{value.name}</h1>\n          <MdClose />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nCard.propTypes = {\n  value: PropTypes.object.isRequired,\n  toLoad: PropTypes.bool\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}