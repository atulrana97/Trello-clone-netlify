{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card({\n  toLoad,\n  values\n}) {\n  if (toLoad === false) {\n    ;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [\"loading ...\", /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 6\n    }, this);\n  }\n\n  const getLists = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: values.map(ele => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homepage-card\",\n        onClick: () => {\n          getLists(ele.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: ele.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, ele.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nCard.propTypes = {\n  values: PropTypes.array.isRequired,\n  toLoad: PropTypes.bool.isRequired\n};\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/Card.js"],"names":["React","PropTypes","Card","toLoad","values","getLists","map","ele","id","name","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAd,EAAkC;AAChC,MAAID,MAAM,KAAK,KAAf,EAAsB;AACpB;;AAAC;AAAA;AAAA,6CACY;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAGF;;AACD,QAAME,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACA,sBACE;AAAA,cACGD,MAAM,CAACE,GAAP,CAAYC,GAAD,IAAS;AACnB,0BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAGE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,QAAQ,CAACE,GAAG,CAACC,EAAL,CAAR;AACD,SALH;AAAA,+BAOE;AAAA,oBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AAPF,SAEOF,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAxBQN,I;AA0BTA,IAAI,CAACQ,SAAL,GAAiB;AACfN,EAAAA,MAAM,EAAEH,SAAS,CAACU,KAAV,CAAgBC,UADT;AAEfT,EAAAA,MAAM,EAAEF,SAAS,CAACY,IAAV,CAAeD;AAFR,CAAjB;AAIA,eAAeV,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Card({ toLoad, values }) {\n  if (toLoad === false) {\n    ;<div>\n      loading ...<h1></h1>\n    </div>\n  }\n  const getLists = () => {}\n  return (\n    <div>\n      {values.map((ele) => {\n        return (\n          <div\n            className=\"homepage-card\"\n            key={ele.id}\n            onClick={() => {\n              getLists(ele.id)\n            }}\n          >\n            <h1>{ele.name}</h1>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nCard.propTypes = {\n  values: PropTypes.array.isRequired,\n  toLoad: PropTypes.bool.isRequired\n}\nexport default Card\n"]},"metadata":{},"sourceType":"module"}