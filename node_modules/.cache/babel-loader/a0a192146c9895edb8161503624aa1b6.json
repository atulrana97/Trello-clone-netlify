{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../task2.css';\nimport { useParams } from 'react-router';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const onlyId = id.split('').filter(ele => ele !== ':');\n  let finalId = '';\n  onlyId.map(ele => finalId += ele);\n  const formStyling = useRef(null);\n  const [newBoardName, setBoardName] = useState('');\n  const [currentState, changeCurrentState] = useState('');\n  const [boardLists, getBoards] = useState([]);\n  const [boardListCards, getCardsForList] = useState([]);\n  const [load, checkLoad] = useState(true);\n  useEffect(async () => {\n    const listLink = `https://api.trello.com/1/boards/${finalId}/lists?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`;\n    console.log(listLink);\n    const getLists = await axios.get(listLink);\n    getBoards(getLists.data);\n    const cardLink = `https://api.trello.com/1/boards/${finalId}/cards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`;\n    const getCards = await axios.get(cardLink);\n    getCardsForList(getCards.data);\n    checkLoad(false);\n  }, []);\n\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none';\n    } else {\n      formStyling.current.style.display = 'block';\n    }\n  };\n\n  const handleBoardName = e => {\n    setBoardName(e.target.value);\n  };\n\n  const createNewBoard = async e => {\n    e.preventDefault();\n    console.log(newBoardName);\n    await axios.post(`https://api.trello.com/1/boards/?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86&name=${newBoardName}`);\n    setBoardName('');\n  };\n\n  console.log(boardListCards);\n\n  const handleChange = async (e, id) => {\n    e.preventDefault();\n    changeCurrentState(e.target.value);\n    boardListCards.map(ele => {\n      if (ele.id === id) {\n        ele.name = currentState;\n      }\n\n      return ele;\n    });\n  };\n\n  if (load) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Wait Boards are loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-board-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-board\",\n      children: boardLists.map(ele => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-list-name\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: ele.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, ele.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-cards\",\n            children: boardListCards.map(element => {\n              if (element.idList === ele.id) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cards\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: element.name,\n                    onChange: e => handleChange(e, element.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this)\n                }, element.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {}, element.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 28\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-button-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-new-board\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"add-card\",\n                  onClick: openForm,\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Create New Board\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"add-board-form\",\n                  ref: formStyling,\n                  onSubmit: createNewBoard,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"BoardName\",\n                    onChange: handleBoardName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)]\n                }, ele.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, ele.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"LQPmv/ooragl17vAmriYLB3qILE=\", false, function () {\n  return [useParams];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/pages/Dashboard.js"],"names":["React","useState","useEffect","useRef","useParams","axios","NavBar","Dashboard","id","onlyId","split","filter","ele","finalId","map","formStyling","newBoardName","setBoardName","currentState","changeCurrentState","boardLists","getBoards","boardListCards","getCardsForList","load","checkLoad","listLink","console","log","getLists","get","data","cardLink","getCards","openForm","current","style","display","handleBoardName","e","target","value","createNewBoard","preventDefault","post","handleChange","name","element","idList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport '../task2.css'\nimport { useParams } from 'react-router'\nimport axios from 'axios'\nimport NavBar from '../components/NavBar'\n\nfunction Dashboard() {\n  const { id } = useParams()\n  const onlyId = id.split('').filter((ele) => ele !== ':')\n  let finalId = ''\n  onlyId.map((ele) => (finalId += ele))\n  const formStyling = useRef(null)\n  const [newBoardName, setBoardName] = useState('')\n  const [currentState, changeCurrentState] = useState('')\n  const [boardLists, getBoards] = useState([])\n  const [boardListCards, getCardsForList] = useState([])\n  const [load, checkLoad] = useState(true)\n  useEffect(async () => {\n    const listLink = `https://api.trello.com/1/boards/${finalId}/lists?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`\n    console.log(listLink)\n    const getLists = await axios.get(listLink)\n    getBoards(getLists.data)\n    const cardLink = `https://api.trello.com/1/boards/${finalId}/cards?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86`\n    const getCards = await axios.get(cardLink)\n    getCardsForList(getCards.data)\n    checkLoad(false)\n  }, [])\n  const openForm = () => {\n    if (formStyling.current.style.display === 'block') {\n      formStyling.current.style.display = 'none'\n    } else {\n      formStyling.current.style.display = 'block'\n    }\n  }\n  const handleBoardName = (e) => {\n    setBoardName(e.target.value)\n  }\n  const createNewBoard = async (e) => {\n    e.preventDefault()\n    console.log(newBoardName)\n    await axios.post(\n      `https://api.trello.com/1/boards/?key=4771cda06157329944b577f382bc2cf3&token=7a1c5dce94fc3f0026f3df596e11727bbb51730447ebc0e0f3732ccca73c5e86&name=${newBoardName}`\n    )\n    setBoardName('')\n  }\n  console.log(boardListCards)\n  const handleChange = async (e, id) => {\n    e.preventDefault()\n    changeCurrentState(e.target.value)\n    boardListCards.map((ele) => {\n      if (ele.id === id) {\n        ele.name = currentState\n      }\n      return ele\n    })\n  }\n\n  if (load) {\n    return <div>Wait Boards are loading</div>\n  }\n  return (\n    <div className=\"dash-board-page\">\n      <NavBar />\n      <div className=\"dash-board\">\n        {boardLists.map((ele) => {\n          return (\n            <div key={ele.id} className=\"board-list-container\">\n              <div key={ele.id} className=\"board-list-name\">\n                <h1>{ele.name}</h1>\n              </div>\n              <div className=\"list-cards\">\n                {boardListCards.map((element) => {\n                  if (element.idList === ele.id) {\n                    return (\n                      <div className=\"cards\" key={element.id}>\n                        <input\n                          type=\"text\"\n                          value={element.name}\n                          onChange={(e) => handleChange(e, element.id)}\n                        />\n                      </div>\n                    )\n                  } else {\n                    return <div key={element.id}></div>\n                  }\n                })}\n              </div>\n              <div>\n                <div className=\"add-button-wrapper\">\n                  <div className=\"add-new-board\">\n                    <div className=\"add-card\" onClick={openForm}>\n                      <h1>Create New Board</h1>\n                    </div>\n                    <form\n                      key={ele.id}\n                      className=\"add-board-form\"\n                      ref={formStyling}\n                      onSubmit={createNewBoard}\n                    >\n                      <input\n                        type=\"text\"\n                        placeholder=\"BoardName\"\n                        onChange={handleBoardName}\n                      ></input>\n                      <input type=\"submit\" value=\"Submit\" />\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}