{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/DashBoardLists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport config from '../config/config';\nimport { BsThreeDots } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashBoardLists({\n  list,\n  getBoardsLists\n}) {\n  _s();\n\n  const [currentListName, setCurrentListName] = useState(list.name);\n  const [submitForm, setSubmit] = useState(false);\n\n  const listChangeHandler = e => {\n    setCurrentListName(e.target.value);\n  };\n\n  const updateListName = async (e, listId) => {\n    e.preventDefault();\n    await axios.put(`https://api.trello.com/1/lists/${listId}?key=${config.key}&token=${config.token}&name=${currentListName}`);\n    const getLists = await axios.get(`https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`);\n    getBoardsLists(getLists.data);\n    setSubmit(false);\n  };\n\n  const archiveList = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=${config.key}&token=${config.token}&value=true`);\n    const getLists = await axios.get(`https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`);\n    getBoardsLists(getLists.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-name-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-list-name\",\n      onClick: () => {\n        if (submitForm) {\n          setCurrentListName(list.name);\n          setSubmit(false);\n        } else {\n          setSubmit(true);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          updateListName(e, list.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentListName,\n          \"data-testid\": currentListName,\n          onChange: e => {\n            listChangeHandler(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-list-button\",\n      children: /*#__PURE__*/_jsxDEV(BsThreeDots, {\n        onClick: () => archiveList(list.id),\n        \"data-testid\": \"archiveListButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashBoardLists, \"n3AnvjLCahJJys6EQhTTRMvYwNY=\");\n\n_c = DashBoardLists;\nDashBoardLists.propTypes = {\n  list: PropTypes.object,\n  getBoardsLists: PropTypes.func\n};\nexport default DashBoardLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoardLists\");","map":{"version":3,"sources":["/home/raramuri/Documents/task3-NewBranch Repo clone/groot/atul/react_tasks/src/Task2-Trello Clone/components/DashBoardLists.js"],"names":["React","useState","PropTypes","axios","config","BsThreeDots","DashBoardLists","list","getBoardsLists","currentListName","setCurrentListName","name","submitForm","setSubmit","listChangeHandler","e","target","value","updateListName","listId","preventDefault","put","key","token","getLists","get","idBoard","data","archiveList","id","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport config from '../config/config'\nimport { BsThreeDots } from 'react-icons/bs'\n\nfunction DashBoardLists({ list, getBoardsLists }) {\n  const [currentListName, setCurrentListName] = useState(list.name)\n  const [submitForm, setSubmit] = useState(false)\n  const listChangeHandler = (e) => {\n    setCurrentListName(e.target.value)\n  }\n  const updateListName = async (e, listId) => {\n    e.preventDefault()\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}?key=${config.key}&token=${config.token}&name=${currentListName}`\n    )\n    const getLists = await axios.get(\n      `https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`\n    )\n    getBoardsLists(getLists.data)\n    setSubmit(false)\n  }\n  const archiveList = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=${config.key}&token=${config.token}&value=true`\n    )\n    const getLists = await axios.get(\n      `https://api.trello.com/1/boards/${list.idBoard}/lists?key=${config.key}&token=${config.token}`\n    )\n    getBoardsLists(getLists.data)\n  }\n  return (\n    <div className=\"list-name-container\">\n      <div\n        className=\"board-list-name\"\n        onClick={() => {\n          if (submitForm) {\n            setCurrentListName(list.name)\n            setSubmit(false)\n          } else {\n            setSubmit(true)\n          }\n        }}\n      >\n        <form\n          onSubmit={(e) => {\n            updateListName(e, list.id)\n          }}\n        >\n          <input\n            type=\"text\"\n            value={currentListName}\n            data-testid={currentListName}\n            onChange={(e) => {\n              listChangeHandler(e)\n            }}\n          />\n          <input type=\"submit\" value=\"change\" />\n        </form>\n      </div>\n      <div className=\"archive-list-button\">\n        <BsThreeDots\n          onClick={() => archiveList(list.id)}\n          data-testid=\"archiveListButton\"\n        />\n      </div>\n    </div>\n  )\n}\nDashBoardLists.propTypes = {\n  list: PropTypes.object,\n  getBoardsLists: PropTypes.func\n}\nexport default DashBoardLists\n"]},"metadata":{},"sourceType":"module"}